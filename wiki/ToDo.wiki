#summary Off the cuff to do page.

= Introduction =

This page is a temporary holding spot for brainstorming.  This will probaby need to be organized better some day soon.


= Tasks =

Harness Work
  * Build a system into the test harness that allows us to save out all data points not just stats like min, max, and mean.

Utility Development

  * Fullscreen quad draw - create a utility function for other to use that draws a screen quad as fast as possible.  This quad should suppot a texture, but not require one.  The quad should also support the abilty to execute a pixel shader.
  
* Vertex Limiter - the vertex limiter should generate as many degenerate triangles as possible until the frame rate hits 60 hz.  Once that happens, the vertex limiter will return true and return (via some function call) the vertex buffer pointer, number of degenerate triangles and the index buffer.

  * Pixel Shader Limiter - the pixel shader limiter shall do the same as the vertex limiter, except it shall perform the pixel work using the full screen quad limiter to perform this job.

  * Texture Limiter - the texture limiter shall perform the same work as the vertex limiter, except it shall perform the texture work by rendering textures of varying sizes and ammount to a full screen quad.

  * XML utility: So that the xml output is better encapsulated ( to be better defined )

GPU Tests
  * Vertex Buffer Size -A single vertex buffer will have an optimal size.  Build a vertex buffer of varying size from small to large and determine, via framerate, what the optimal size is for your hardware.  Start with the vertex limiter so that the program begins at 60 hertz.  The test is over when the fps reaches 30 fps.

  * Vertex Alignment - Create a degenerate triangle strip of 500,000 vertices.  Create as many permutations as possible to generate different size vertex types.  The assumption is that vertex types that are aligned to the cache boundaries of the vertex fetching system should be faster than those that are not.

  * Overdraw Performance -  use a full screen quad and gather the frame rate at overdraw values of 0,1,2,3,4â€¦x.

CPU Tests
  * CPU Stream Count
  * float vs. double performance
  * integer vs. long performance
  * integer vs. float performance
  * float vs. double performance
  * random vs. linear memory access vs. strided access
  * single vs. multi-thread linear access
  * single vs. multi-thread random access